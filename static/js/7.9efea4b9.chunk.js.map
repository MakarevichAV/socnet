{"version":3,"sources":["utils/validators/validators.js","components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormControls.module.css","components/Login/Login.module.css","components/Login/Login.jsx"],"names":["required","value","maxLengthCreator","maxLength","length","Textarea","input","meta","props","className","s","textarea","touched","error","errorMsg","Input","module","exports","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","component","validate","name","placeholder","type","checkbox","btn","connect","state","isAuth","auth","login","to","loginWindow","formData","email","password","rememberMe"],"mappings":"0GAAA,oEACO,IAAMA,EAAW,SAAAC,GACpB,IAAIA,EACJ,MAAO,mFAIEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAIA,EAAMG,OAASD,EACf,MAAO,0LAAsCA,K,oJCNxCE,EAAW,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAASC,EAAY,gCACnD,OACI,yBAAKC,UAAWC,IAAEC,SAAW,KAAOJ,EAAKK,SAAWL,EAAKM,OAASH,IAAEG,QAChE,8CAAcP,EAAWE,IACxBD,EAAKK,SAAWL,EAAKM,OAAS,0BAAMJ,UAAWC,IAAEI,UAAWP,EAAKM,SAKjEE,EAAQ,SAAC,GAA+B,IAA7BT,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAASC,EAAY,gCAChD,OACI,yBAAKC,UAAWC,IAAEJ,MAAQ,KAAOC,EAAKK,SAAWL,EAAKM,OAASH,IAAEG,QAC7D,2CAAWP,EAAWE,IACrBD,EAAKK,SAAWL,EAAKM,OAAS,0BAAMJ,UAAWC,IAAEI,UAAWP,EAAKM,U,oBCf9EG,EAAOC,QAAU,CAAC,SAAW,+BAA+B,MAAQ,4BAA4B,MAAQ,4BAA4B,SAAW,iC,oBCA/ID,EAAOC,QAAU,CAAC,YAAc,2BAA2B,KAAO,oBAAoB,MAAQ,qBAAqB,SAAW,wBAAwB,IAAM,mBAAmB,MAAQ,uB,iCCDvL,wGA4BMC,EAAiBC,YAAU,CAAEC,KAAM,SAAlBD,EAnBL,SAACX,GACf,OACI,0BAAMC,UAAWC,IAAEU,KAAMC,SAAUb,EAAMc,cACrC,kBAAC,IAAD,CAAOC,UAAWR,IAAOS,SAAU,CAACxB,KAAWS,UAAWC,IAAEJ,MACxDmB,KAAK,QAAQC,YAAY,QAAQC,KAAK,UAC1C,kBAAC,IAAD,CAAOJ,UAAWR,IAAOS,SAAU,CAACxB,KAAW2B,KAAK,WAAWlB,UAAWC,IAAEJ,MACxEmB,KAAK,WAAWC,YAAY,aAChC,yBAAKjB,UAAWC,IAAEkB,UACd,+BACI,kBAAC,IAAD,CAAOL,UAAW,QAASI,KAAK,WAAWF,KAAK,eADpD,gBAKHjB,EAAMK,OAAS,uBAAGJ,UAAWC,IAAEG,OAAQL,EAAMK,OAC9C,4BAAQJ,UAAS,UAAKC,IAAEJ,MAAP,YAAgBI,IAAEmB,MAAnC,aA2BGC,uBANF,SAACC,GACV,MAAO,CACHC,OAAQD,EAAME,KAAKD,UAIE,CAAEE,WAAhBJ,EApBD,SAACtB,GAIX,OAAIA,EAAMwB,OACC,kBAAC,IAAD,CAAUG,GAAG,aAGpB,yBAAK1B,UAAS,UAAKC,IAAE0B,YAAP,eACV,kBAAClB,EAAD,CAAgBG,SARP,SAACgB,GACd7B,EAAM0B,MAAMG,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/7.9efea4b9.chunk.js","sourcesContent":["// Валидатор\r\nexport const required = value => {\r\n    if (value) return undefined;\r\n    return 'Заполните поле';\r\n}\r\n\r\n// Создатель валидатора\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) {\r\n        return \"Максимальное количество символов \" + maxLength;\r\n    }\r\n    return undefined;\r\n}\r\n\r\n","import React from 'react';\r\nimport s from './FormControls.module.css';\r\n\r\nexport const Textarea = ({ input, meta, ...props }) => {\r\n    return (\r\n        <div className={s.textarea + ' ' + (meta.touched && meta.error && s.error)}>\r\n            <textarea {...input} {...props} />\r\n            {meta.touched && meta.error && <span className={s.errorMsg}>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({ input, meta, ...props }) => {\r\n    return (\r\n        <div className={s.input + ' ' + (meta.touched && meta.error && s.error)}>\r\n            <input {...input} {...props} />\r\n            {meta.touched && meta.error && <span className={s.errorMsg}>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"FormControls_textarea__KsdvN\",\"input\":\"FormControls_input__4uoPK\",\"error\":\"FormControls_error__39y5A\",\"errorMsg\":\"FormControls_errorMsg__27Xuv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginWindow\":\"Login_loginWindow__Dl9EG\",\"form\":\"Login_form__aND4s\",\"input\":\"Login_input__s1LuM\",\"checkbox\":\"Login_checkbox__372Oe\",\"btn\":\"Login_btn__HUxLa\",\"error\":\"Login_error__15uwW\"};","import React from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport s from './Login.module.css';\r\nimport { Input } from '../common/FormsControls/FormsControls';\r\nimport { login } from '../../redux/authReducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { required } from '../../utils/validators/validators';\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form className={s.form} onSubmit={props.handleSubmit}>\r\n            <Field component={Input} validate={[required]} className={s.input}\r\n                name=\"email\" placeholder=\"Email\" type=\"email\" />\r\n            <Field component={Input} validate={[required]} type=\"password\" className={s.input}\r\n                name=\"password\" placeholder=\"password\" />\r\n            <div className={s.checkbox}>\r\n                <label>\r\n                    <Field component={'input'} type=\"checkbox\" name=\"rememberMe\" />\r\n                    remember me\r\n                </label>\r\n            </div>\r\n            {props.error && <p className={s.error}>{props.error}</p>}\r\n            <button className={`${s.input} ${s.btn}`}>Login</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to=\"/profile\" />\r\n    }\r\n    return (\r\n        <div className={`${s.loginWindow} container`}>\r\n            <LoginReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mstp = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nexport default connect(mstp, { login })(Login);"],"sourceRoot":""}