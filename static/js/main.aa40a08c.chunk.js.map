{"version":3,"sources":["serviceWorker.js","redux/sidebarReducer.js","redux/appReducer.js","redux/reduxStore.js","components/Menu/Menu.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","hoc/withSuspense.js","App.js","index.js","redux/authReducer.js","components/Header/Header.module.css","redux/profileReducer.js","components/common/Preloader/Preloader.jsx","redux/dialoguesReducer.js","utils/object-helpers.js","redux/usersReducer.js","components/Menu/Menu.module.css","components/common/Preloader/Preloader.module.css","assets/images/preloader.svg","api/api.js"],"names":["Boolean","window","location","hostname","match","initialState","sidebarReducer","state","action","type","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialoguesPage","dialoguesReducer","sidebar","usersPage","usersReducer","auth","authReducer","app","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Menu","props","className","s","nav","to","isAuth","onClick","logout","Header","header","container","logo","HeaderContainer","this","React","Component","connect","login","withSuspense","Suspense","fallback","ProfilePageContainer","lazy","UsersPageContainer","DialoguesPage","Login","App","initializeApp","path","render","Preloader","withRouter","dispatch","a","getMyself","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","userId","email","setAuthUserData","payload","authAPI","me","response","resultCode","data","id","password","rememberMe","msg","messages","length","stopSubmit","_error","module","exports","profile","posts","name","date","likesCount","status","addPostAC","newPostText","setStatus","getUserProfile","userAPI","getProfile","profileData","getUserStatus","profileAPI","getStatus","updateUserStatus","updateStatus","newPost","filter","p","postId","wrapper","src","preloader","alt","dialogues","msgs","txt","direction","sendMsgAC","newMsgBody","newMsg","updateObjectInArray","items","itemId","propName","newProps","map","item","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProcess","followSuccess","unfollowSuccess","setCurrentPage","page","toggleIsFetching","toggleFollowingProcess","getUsers","totalCount","followUnfollowFlow","apiMethod","actionCreator","follow","setFollow","bind","unfollow","setUnfollow","followed","instance","axios","withCredentials","baseURL","headers","get","res","post","delete","warn","put"],"mappings":"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","file":"static/js/main.aa40a08c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default sidebarReducer;","import { getMyself } from \"./authReducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS });\r\n\r\nexport const initializeApp = () => async (dispatch) => {\r\n    await dispatch(getMyself());\r\n    dispatch(initializedSuccess());\r\n}\r\n\r\nexport default appReducer;","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport profileReducer from './profileReducer';\r\nimport dialoguesReducer from './dialoguesReducer';\r\nimport sidebarReducer from './sidebarReducer';\r\nimport usersReducer from './usersReducer';\r\nimport authReducer from './authReducer';\r\nimport appReducer from './appReducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer, \r\n    dialoguesPage: dialoguesReducer, \r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './Menu.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Menu = (props) => {\r\n    return (\r\n        <ul className={s.nav}>\r\n            <li><NavLink to=\"/profile\">Профиль</NavLink></li>\r\n            <li><NavLink to=\"/dialogues\">Сообщения</NavLink></li>\r\n            <li><NavLink to=\"/users\">Пользователи</NavLink></li>\r\n            {/* <li><NavLink to=\"/food\">Питание</NavLink></li>\r\n                <li><NavLink to=\"/activity\">Физуха</NavLink></li>\r\n                <li><NavLink to=\"/trainer\">Тренер</NavLink></li> */}\r\n            <li>\r\n                {props.isAuth ?\r\n                    <button onClick={props.logout}>Выйти</button> :\r\n                    <NavLink to=\"/login\">Войти</NavLink>\r\n                }\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Menu;","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport Menu from '../Menu/Menu';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <div className={`wrapper ${s.container}`}>\r\n                <div className={s.logo}></div>\r\n                <Menu {...props} />\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../redux/authReducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n    { logout })\r\n    (HeaderContainer);","import React from 'react';\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return (\r\n            <React.Suspense fallback={<div>Loading</div>}>\r\n                <Component {...props} />\r\n            </React.Suspense>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport { Route, withRouter } from 'react-router-dom';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { initializeApp } from './redux/appReducer';\r\nimport Preloader from './components/common/Preloader/Preloader';\r\nimport { withSuspense } from './hoc/withSuspense';\r\n\r\n// import UsersPageContainer from './components/UsersPage/UsersPageContainer';\r\n// import ProfilePageContainer from './components/ProfilePage/ProfilePageContainer';\r\n// import DialoguesPage from './components/DialoguesPage/DialoguesPage';\r\n// import Login from './components/Login/Login';\r\nconst ProfilePageContainer = React.lazy(() => import('./components/ProfilePage/ProfilePageContainer'));\r\nconst UsersPageContainer = React.lazy(() => import('./components/UsersPage/UsersPageContainer'));\r\nconst DialoguesPage = React.lazy(() => import('./components/DialoguesPage/DialoguesPage'));\r\nconst Login = React.lazy(() => import('./components/Login/Login'));\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader />\r\n        }\r\n        return (\r\n            <div className=\"App\">\r\n                <HeaderContainer />\r\n                <Route path=\"/profile/:userId?\" render={withSuspense(ProfilePageContainer)} />\r\n                <Route path=\"/dialogues\" render={withSuspense(DialoguesPage)} />\r\n                <Route path=\"/users\" render={withSuspense(UsersPageContainer)} />\r\n                <Route path=\"/login\" render={withSuspense(Login)} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mstp = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mstp, { initializeApp })\r\n)(App);","import * as serviceWorker from './serviceWorker';\r\nimport store from './redux/reduxStore';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <App />\r\n            </Provider>\r\n        </BrowserRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n","import { authAPI } from \"../api/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({ type: SET_USER_DATA, payload: { userId, email, login, isAuth } });\r\n\r\nexport const getMyself = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.resultCode === 0) {\r\n        const { id, login, email } = response.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getMyself());\r\n    } else {\r\n        const msg = response.data.messages.length > 0 ? response.data.messages : 'Ошибочка вышла';\r\n        dispatch(stopSubmit('login', { _error: msg }));\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1leBm\",\"container\":\"Header_container__15lX4\",\"logo\":\"Header_logo__1z227\"};","import { userAPI, profileAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DEL_POST = 'DEL_POST';\r\n\r\nlet initialState = {\r\n    profile: null,\r\n    posts: [\r\n        {\r\n            id: 1,\r\n            msg: 'Пост 1333',\r\n            name: 'Макар',\r\n            date: '25 августа в 13:42',\r\n            likesCount: 23\r\n        },\r\n        {\r\n            id: 2,\r\n            msg: 'Пост 2. Бла бла бла. Я сказал бла блаблабла',\r\n            name: 'Макар',\r\n            date: '25 августа в 13:42',\r\n            likesCount: 12\r\n        },\r\n        {\r\n            id: 3,\r\n            msg: 'Пост 3',\r\n            name: 'Макар',\r\n            date: '25 августа в 13:42',\r\n            likesCount: 6\r\n        },\r\n        {\r\n            id: 4,\r\n            msg: 'Пост 4',\r\n            name: 'Макар',\r\n            date: '25 августа в 13:42',\r\n            likesCount: 17\r\n        }\r\n    ],\r\n    status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            const newPost = {\r\n                id: 5,\r\n                msg: action.newPostText,\r\n                name: 'Макар',\r\n                date: '15 сентября в 13:57',\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            }\r\n        }\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case DEL_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id !== action.postId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostAC = (newPostText) => ({ type: ADD_POST, newPostText });\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile: profile });\r\nexport const setStatus = (status) => ({ type: SET_STATUS, status: status });\r\nexport const delPost = (postId) => ({ type: DEL_POST, postId });\r\n\r\n// Санки \r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let profileData = await userAPI.getProfile(userId);\r\n    dispatch(setUserProfile(profileData));\r\n}\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response));\r\n}\r\nexport const updateUserStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport s from './Preloader.module.css';\r\nimport preloader from '../../../assets/images/preloader.svg';\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <img src={preloader} alt='preloader' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","const SEND_MSG = 'SEND_MSG';\r\n\r\nlet initialState = {\r\n    dialogues: [\r\n        { id: 1, name: 'Ксения' },\r\n        { id: 2, name: 'Игорь' },\r\n        { id: 3, name: 'Марина' },\r\n        { id: 4, name: 'Галина' },\r\n        { id: 5, name: 'Твикс' }\r\n    ],\r\n    msgs: [\r\n        {\r\n            id: 1,\r\n            txt: 'Отправленное сообщение 1. Бла бла бла. Бла бла бла',\r\n            direction: 'sended'\r\n        },\r\n        {\r\n            id: 2,\r\n            txt: 'Отправленное сообщение 2. Бла бла бла. Бла бла бла',\r\n            direction: 'sended'\r\n        },\r\n        {\r\n            id: 3,\r\n            txt: 'Отправленное сообщение 3. Бла бла бла. Бла бла бла. Кто понял жизнь, работать перестал',\r\n            direction: 'sended'\r\n        },\r\n        {\r\n            id: 4,\r\n            txt: 'Принятое сообщение 1. Бла бла бла. Бла бла бла',\r\n            direction: 'received'\r\n        },\r\n        {\r\n            id: 5,\r\n            txt: 'Отправленное сообщение 4. Бла бла бла. Бла бла бла',\r\n            direction: 'sended'\r\n        },\r\n        {\r\n            id: 6,\r\n            txt: 'Принятое сообщение 2. Бла бла бла. Бла бла бла',\r\n            direction: 'received'\r\n        }\r\n    ]\r\n}\r\n\r\nconst dialoguesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MSG:\r\n            const newMsg = {\r\n                id: 7,\r\n                txt: action.newMsgBody,\r\n                direction: 'sended'\r\n            };\r\n            return {\r\n                ...state,\r\n                msgs: [...state.msgs, newMsg]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMsgAC = (newMsgBody) => ({ type: SEND_MSG, newMsgBody });\r\n\r\nexport default dialoguesReducer;","export const updateObjectInArray = (items, itemId, propName, newProps) => {\r\n    return items.map((item) => {\r\n        if (item[propName] === itemId) {\r\n            return { ...item, ...newProps }\r\n        }\r\n        return item;\r\n    })\r\n}","import { userAPI } from \"../api/api\";\r\nimport { updateObjectInArray } from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_FOLLOWING_PROCESS = 'TOGGLE_FOLLOWING_PROCESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 20,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProcess: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', { followed: true })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', { followed: false })\r\n\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.page\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalCount\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_FOLLOWING_PROCESS:\r\n            return {\r\n                ...state,\r\n                followingInProcess: action.isFetching\r\n                    ? [...state.followingInProcess, action.userId]\r\n                    : state.followingInProcess.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId });\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId });\r\nexport const setUsers = (users) => ({ type: SET_USERS, users });\r\nexport const setCurrentPage = (page) => ({ type: SET_CURRENT_PAGE, page });\r\nexport const setTotalUsersCount = (totalCount) => ({ type: SET_TOTAL_USERS_COUNT, totalCount });\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\nexport const toggleFollowingProcess = (isFetching, userId) => ({ type: TOGGLE_FOLLOWING_PROCESS, isFetching, userId });\r\n\r\n\r\n// Санки \r\nexport const getUsers = (pageSize, currentPage) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    const data = await userAPI.getUsers(pageSize, currentPage);\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n}\r\n\r\n// Функция --- Инкапсуляция логики follow/unfollow для санок follow и unfollow // Избегание дублирования кода\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProcess(true, userId));\r\n    const data = await apiMethod(userId);\r\n    if (data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProcess(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, userAPI.setFollow.bind(userAPI), followSuccess);\r\n}\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, userAPI.setUnfollow.bind(userAPI), unfollowSuccess);\r\n}\r\n\r\nexport default usersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Menu_nav__2X9ao\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Preloader_wrapper__2m_TU\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.6672b69e.svg\";","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"900f2572-ce22-41f0-8959-6ed6faf61976\"\r\n    }\r\n});\r\n\r\nexport const userAPI = {\r\n    getUsers(pageSize, currentPage) {\r\n        return instance.get(`users?count=${pageSize}&page=${currentPage}`)\r\n            .then(res => res.data);\r\n    },\r\n    setFollow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n            .then(res => res.data);\r\n    },\r\n    setUnfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n            .then(res => res.data);\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please use profileAPI object');\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n            .then(res => res.data);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n            .then(res => res.data);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status: status });\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n            .then(res => res.data);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe });\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}"],"sourceRoot":""}