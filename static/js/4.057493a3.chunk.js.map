{"version":3,"sources":["utils/validators/validators.js","components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormControls.module.css","hoc/withAuthRedirect.js","assets/images/user-photo.jpg","components/ProfilePage/ProfilePage.module.css","components/ProfilePage/UserBar/UserInfo/UserInfo.module.css","components/ProfilePage/UserBar/UserBar.module.css","components/ProfilePage/Wall/Wall.module.css","components/ProfilePage/Wall/Info/Info.module.css","components/ProfilePage/Wall/Posts/Posts.module.css","components/ProfilePage/Wall/Posts/Post/PostInfo/PostInfo.module.css","components/ProfilePage/Wall/Posts/Post/PostTxt/PostTxt.module.css","components/ProfilePage/Wall/Posts/PostCreator/PostCreator.module.css","components/ProfilePage/UserBar/UserInfo/UserInfo.jsx","components/ProfilePage/UserBar/UserBar.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/ProfilePage/Wall/Info/InfoWithHooks.jsx","components/ProfilePage/Wall/Posts/Post/PostInfo/PostInfo.jsx","components/ProfilePage/Wall/Posts/Post/PostTxt/PostTxt.jsx","components/ProfilePage/Wall/Posts/Post/Post.jsx","components/ProfilePage/Wall/Posts/PostCreator/PostCreator.jsx","components/ProfilePage/Wall/Posts/Posts.jsx","components/ProfilePage/Wall/Posts/PostsContainer.jsx","components/ProfilePage/Wall/Wall.jsx","components/ProfilePage/ProfilePage.jsx","components/ProfilePage/ProfilePageContainer.jsx"],"names":["required","value","maxLengthCreator","maxLength","length","Textarea","input","meta","props","className","s","textarea","touched","error","errorMsg","Input","module","exports","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","UserInfo","userPhoto","backgroundImage","photo","defaultPhoto","info","style","name","data","btn","type1","UserBar","userBar","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","Info","useState","editMode","setEditMode","status","setStatus","useEffect","onClick","key","autoFocus","onBlur","updateStatus","onChange","e","target","infoBlock","head","jobStatus","description","PostInfo","date","PostTxt","text","msg","Post","AddPostFormRedux","reduxForm","form","onSubmit","handleSubmit","newPost","Field","component","validate","placeholder","PostCreator","formData","addPost","newPostText","Posts","posts","map","item","id","val","newPostVal","changePostVal","PostsContainer","profilePage","dispatch","addPostAC","Wall","wall","container","InfoWithHooks","ProfilePage","profile","photos","large","fullName","socials","contacts","jobFlag","lookingForAJob","jobDescription","lookingForAJobDescription","updateUserStatus","Preloader","ProfilePageContainer","userId","match","params","getUserProfile","getUserStatus","compose","withRouter"],"mappings":"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","file":"static/js/4.057493a3.chunk.js","sourcesContent":["// Валидатор\r\nexport const required = value => {\r\n    if (value) return undefined;\r\n    return 'Заполните поле';\r\n}\r\n\r\n// Создатель валидатора\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) {\r\n        return \"Максимальное количество символов \" + maxLength;\r\n    }\r\n    return undefined;\r\n}\r\n\r\n","import React from 'react';\r\nimport s from './FormControls.module.css';\r\n\r\nexport const Textarea = ({ input, meta, ...props }) => {\r\n    return (\r\n        <div className={s.textarea + ' ' + (meta.touched && meta.error && s.error)}>\r\n            <textarea {...input} {...props} />\r\n            {meta.touched && meta.error && <span className={s.errorMsg}>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({ input, meta, ...props }) => {\r\n    return (\r\n        <div className={s.input + ' ' + (meta.touched && meta.error && s.error)}>\r\n            <input {...input} {...props} />\r\n            {meta.touched && meta.error && <span className={s.errorMsg}>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"FormControls_textarea__KsdvN\",\"input\":\"FormControls_input__4uoPK\",\"error\":\"FormControls_error__39y5A\",\"errorMsg\":\"FormControls_errorMsg__27Xuv\"};","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Redirect to=\"/login\" />\r\n            }\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    const ConnectAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent);\r\n    return ConnectAuthRedirectComponent;\r\n}","module.exports = __webpack_public_path__ + \"static/media/user-photo.a9c3f113.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profilePage\":\"ProfilePage_profilePage__1eZ7z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"UserInfo_info__36ZC_\",\"photo\":\"UserInfo_photo__38FvJ\",\"name\":\"UserInfo_name__2Leru\",\"data\":\"UserInfo_data__3EMRq\",\"btn\":\"UserInfo_btn__uRMNo\",\"type1\":\"UserInfo_type1__1-O_j\",\"item\":\"UserInfo_item__2wx1O\",\"underline\":\"UserInfo_underline__3GJ04\",\"important\":\"UserInfo_important__3s0Kw\",\"head\":\"UserInfo_head__RnDdQ\",\"blue\":\"UserInfo_blue__Rhokc\",\"red\":\"UserInfo_red__1S-po\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userBar\":\"UserBar_userBar__XSkX6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wall\":\"Wall_wall__zaAMg\",\"container\":\"Wall_container__10l08\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"head\":\"Info_head__1QYJZ\",\"infoBlock\":\"Info_infoBlock__cOhUc\",\"status\":\"Info_status__3Dy-X\",\"key\":\"Info_key__19D3t\",\"jobStatus\":\"Info_jobStatus__2DVXz\",\"description\":\"Info_description__2ctr7\",\"input\":\"Info_input__XkSc_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoBlock\":\"Posts_infoBlock__3jIeW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"PostInfo_info__33rWZ\",\"photo\":\"PostInfo_photo__1OFh1\",\"data\":\"PostInfo_data__3zIJ-\",\"name\":\"PostInfo_name__1qTWe\",\"date\":\"PostInfo_date__gECDC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"PostTxt_text__1DdQn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPost\":\"PostCreator_newPost__2rCpp\",\"photo\":\"PostCreator_photo__1UHOJ\",\"textarea\":\"PostCreator_textarea__3E_fN\",\"btn\":\"PostCreator_btn__1oPYC\"};","import React from 'react';\r\nimport s from './UserInfo.module.css';\r\nimport defaultPhoto from '../../../../assets/images/user-photo.jpg';\r\n\r\nconst UserInfo = (props) => {\r\n\r\n    const userPhoto = {\r\n        backgroundImage: `url(${props.photo ? props.photo : defaultPhoto})`\r\n    }\r\n    \r\n    return (\r\n        <div className={s.info}>\r\n            <div className={s.photo}\r\n                style={userPhoto}></div>\r\n            <p className={s.name}>{props.name}</p>\r\n            <div className={s.data}>\r\n                {/* <p className={`${s.item} ${s.underline}`}>\r\n                    <span>Возраст</span>\r\n                    <span>31 год</span>\r\n                </p>\r\n                <p className={`${s.item} ${s.underline}`}>\r\n                    <span>Рост</span>\r\n                    <span>189 см</span>\r\n                </p>\r\n                <p className={`${s.item} ${s.underline}`}>\r\n                    <span>Вес</span>\r\n                    <span>95 кг</span>\r\n                </p> */}\r\n\r\n            </div>\r\n            <button className={`${s.btn} ${s.type1}`}>Редактировать</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserInfo;","import React from 'react';\r\nimport UserInfo from './UserInfo/UserInfo';\r\nimport s from './UserBar.module.css';\r\n\r\nconst UserBar = (props) => {\r\n    return (\r\n        <div className={s.userBar}>\r\n            <UserInfo {...props} /> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserBar;","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState, useEffect } from 'react';\r\nimport s from './Info.module.css';\r\n\r\nconst Info = (props) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n    useEffect(() => { \r\n        setStatus(props.status);\r\n    }, []);\r\n    const editModeOn = () => {\r\n        setEditMode(true);\r\n    }\r\n    const editModeOff = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const changeStatusInputVal = (e) => {\r\n        setStatus(e.target.value);\r\n    }\r\n    return (\r\n        <>\r\n            {!editMode &&\r\n                <p className={s.status} onClick={editModeOn} >\r\n                    <span className={s.key}>Статус:</span> {status}\r\n                </p>}\r\n            {editMode &&\r\n                <input className={s.input} autoFocus={true} value={status}\r\n                    onBlur={editModeOff} onChange={changeStatusInputVal} />}\r\n            <div className={s.infoBlock}>\r\n                <p className={s.head}>Работа</p>\r\n                <p className={s.jobStatus}>\r\n                    {/* {this.props.jobFlag ? 'Ищу работу' : 'Трудоустроен'} */}\r\n                </p>\r\n                <p className={s.description}>\r\n                    {/* {this.props.jobDescription ? this.props.jobDescription : null} */}\r\n                </p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Info;","import React from 'react';\r\nimport s from './PostInfo.module.css';\r\n\r\nconst PostInfo = ({ name, date }) => {\r\n    return (\r\n        <div className={s.info}>\r\n            <div className={s.photo}></div>\r\n            <div className={s.data}>\r\n                <p className={s.name}>{name}</p>\r\n                <p className={s.date}>{date}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostInfo;","import React from 'react';\r\nimport s from './PostTxt.module.css';\r\n\r\nconst PostTxt = (props) => {\r\n    return (\r\n        <div className={s.text}>\r\n            {props.msg}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostTxt;","import React from 'react';\r\nimport PostInfo from './PostInfo/PostInfo';\r\nimport PostTxt from './PostTxt/PostTxt';\r\n\r\nconst Post = ({ msg, name, date }) => {\r\n    return (\r\n        <>\r\n            <PostInfo name={name} date={date} />\r\n            <PostTxt msg={msg} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './PostCreator.module.css';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../../../../utils/validators/validators';\r\nimport { Textarea } from '../../../../common/FormsControls/FormsControls';\r\n\r\nconst PostCreator = (props) => {\r\n\r\n    const onAddPost = (formData) => {\r\n        props.addPost(formData.newPostText);\r\n    }\r\n\r\n    return (\r\n        <AddPostFormRedux onSubmit={onAddPost} />\r\n    )\r\n\r\n}\r\n\r\nconst maxLength = maxLengthCreator(10);\r\nconst PostCreatorForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={s.newPost}>\r\n                <div className={s.photo}></div>\r\n                <Field name=\"newPostText\" component={Textarea} className={s.textarea} \r\n                    validate={[required, maxLength]} placeholder=\"Что у Вас нового?\" />\r\n            </div>\r\n            <button className={`${s.btn} ${s.type1}`}>\r\n                Опубликовать\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({ form: 'addPostForm' })(PostCreatorForm);\r\n\r\nexport default PostCreator;","import React from 'react';\r\nimport s from './Posts.module.css';\r\nimport Post from './Post/Post';\r\nimport PostCreator from './PostCreator/PostCreator';\r\n\r\nconst Posts = (props) => {\r\n\r\n    const posts = props.posts.map((item) => {\r\n        return (\r\n            <div key={item.id} className={s.infoBlock}>\r\n                <Post id={item.id} msg={item.msg} name={item.name} date={item.date} />\r\n            </div>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <div className={s.infoBlock}>\r\n                <PostCreator val={props.newPostVal}\r\n                    addPost={props.addPost} changePostVal={props.changePostVal} />\r\n            </div>\r\n            {posts}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Posts;","import React from 'react';\r\nimport Posts from './Posts';\r\nimport { addPostAC } from '../../../../redux/profileReducer';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostVal: state.profilePage.newPostVal\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostAC(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\r\n\r\nexport default PostsContainer;","import React from 'react';\r\nimport s from './Wall.module.css';\r\nimport InfoWithHooks from './Info/InfoWithHooks';\r\nimport PostsContainer from './Posts/PostsContainer';\r\n\r\nconst Wall = (props) => {\r\n    return (\r\n        <div className={s.wall}>\r\n            <div className={s.container}>\r\n                <InfoWithHooks {...props} />\r\n            </div>\r\n            <div className={s.container}>\r\n                <PostsContainer />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Wall;","import React from 'react';\r\nimport s from './ProfilePage.module.css';\r\nimport UserBar from './UserBar/UserBar';\r\nimport Wall from './Wall/Wall';\r\nimport Preloader from '../common/Preloader/Preloader';\r\n\r\nconst ProfilePage = (props) => {\r\n    if (!props.profile) {\r\n        return (\r\n            <Preloader />\r\n        )\r\n    }\r\n    return (\r\n        <div className={`${s.profilePage} container`}>\r\n            <UserBar\r\n                photo={props.profile.photos.large}\r\n                name={props.profile.fullName}\r\n                socials={props.profile.contacts}\r\n            />\r\n            <Wall\r\n                status={props.status}\r\n                jobFlag={props.profile.lookingForAJob}\r\n                jobDescription={props.profile.lookingForAJobDescription}\r\n                updateStatus={props.updateUserStatus}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfilePage;","import React from 'react';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport ProfilePage from './ProfilePage';\r\nimport { getUserProfile, getUserStatus, updateUserStatus } from '../../redux/profileReducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\n\r\nclass ProfilePageContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.userId;\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ProfilePage {...this.props} profile={this.props.profile} updateUserStatus={this.props.updateUserStatus} />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        userId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getUserStatus, updateUserStatus }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfilePageContainer);"],"sourceRoot":""}